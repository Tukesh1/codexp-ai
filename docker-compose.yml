version: '3.8'

services:
  postgres:
    image: pgvector/pgvector:pg16
    container_name: codeexp-postgres
    environment:
      POSTGRES_USER: ${POSTGRES_USER:-codeexp}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:-secure_password}
      POSTGRES_DB: ${POSTGRES_DB:-codeexp}
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./backend/database/init.sql:/docker-entrypoint-initdb.d/init.sql
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER:-codeexp}"]
      interval: 5s
      timeout: 5s
      retries: 5

  redis:
    image: redis:7-alpine
    container_name: codeexp-redis
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 5s
      timeout: 3s
      retries: 5

  api:
    build: 
      context: ./backend/api
      dockerfile: Dockerfile
    container_name: codeexp-api
    ports:
      - "8080:8080"
    environment:
      - DATABASE_URL=${DATABASE_URL:-postgresql://codeexp:secure_password@postgres:5432/codeexp}
      - REDIS_URL=${REDIS_URL:-redis://redis:6379}
      - JWT_SECRET=${JWT_SECRET:-your_jwt_secret}
      - CLERK_SECRET_KEY=${CLERK_SECRET_KEY}
      - GITHUB_APP_ID=${GITHUB_APP_ID}
      - GITHUB_APP_PRIVATE_KEY=${GITHUB_APP_PRIVATE_KEY}
      - GO_ENV=${GO_ENV:-development}
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
    volumes:
      - ./backend/api:/app
      - go_modules:/go/pkg/mod
    restart: unless-stopped

  ai-service:
    build:
      context: ./backend/ai-service
      dockerfile: Dockerfile
    container_name: codeexp-ai
    ports:
      - "8000:8000"
    environment:
      - DATABASE_URL=${DATABASE_URL:-postgresql://codeexp:secure_password@postgres:5432/codeexp}
      - REDIS_URL=${REDIS_URL:-redis://redis:6379}
      - HUGGINGFACE_API_KEY=${HUGGINGFACE_API_KEY}
      - MODEL_CACHE_DIR=/app/models
      - PYTHON_ENV=${PYTHON_ENV:-development}
    volumes:
      - model_cache:/app/models
      - ./backend/ai-service:/app
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
    restart: unless-stopped

  frontend:
    build:
      context: ./apps/web
      dockerfile: Dockerfile
    container_name: codeexp-frontend
    ports:
      - "3000:3000"
    environment:
      - NEXT_PUBLIC_API_URL=http://localhost:8080
      - NEXT_PUBLIC_CLERK_PUBLISHABLE_KEY=${NEXT_PUBLIC_CLERK_PUBLISHABLE_KEY}
      - NODE_ENV=${NODE_ENV:-development}
    depends_on:
      - api
    volumes:
      - ./apps/web:/app
      - /app/node_modules
      - /app/.next
    restart: unless-stopped

volumes:
  postgres_data:
    driver: local
  redis_data:
    driver: local
  model_cache:
    driver: local
  go_modules:
    driver: local

networks:
  default:
    name: codeexp-network
